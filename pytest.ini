[tool:pytest]
# Alpaca Improved - Pytest Configuration

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Default options
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=src/alpaca_improved
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --tb=short
    --maxfail=10
    -p no:warnings

# Test markers
markers =
    unit: Unit tests (fast, isolated tests)
    integration: Integration tests (test component interactions)
    e2e: End-to-end tests (full workflow tests)
    slow: Slow tests (may take more than 10 seconds)
    api: Tests that make real API calls (require credentials)
    paper: Tests using paper trading (safe for CI)
    live: Tests using live trading (dangerous, manual only)
    performance: Performance benchmark tests
    security: Security-related tests
    data: Data processing and extraction tests
    strategies: Strategy-related tests
    backtesting: Backtesting framework tests
    options: Options trading specific tests
    risk: Risk management tests
    broker: Broker integration tests
    bot: Trading bot tests

# Warnings filters
filterwarnings =
    error
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*distutils.*:UserWarning
    ignore:.*imp.*:DeprecationWarning

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout configuration
timeout = 300
timeout_method = thread

# Test collection
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# Doctest options
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL
doctest_ignore_import_errors = true

# Coverage configuration
[coverage:run]
source = src/alpaca_improved
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */env/*
    */.venv/*
    */setup.py
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    # Type checking imports
    if TYPE_CHECKING:

precision = 2
show_missing = true
skip_covered = false
sort = Cover

[coverage:html]
directory = htmlcov
title = Alpaca Improved Coverage Report

[coverage:xml]
output = coverage.xml 