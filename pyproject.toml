[build-system]
requires = ["hatchling>=1.13.0"]
build-backend = "hatchling.build"

[project]
name = "alpaca-improved"
dynamic = ["version"]
description = "Advanced Options Trading Platform built on Alpaca's ecosystem with comprehensive backtesting and strategy development capabilities"
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [
    {name = "Alpaca Improved Team", email = "team@alpacaimproved.com"},
]
maintainers = [
    {name = "Alpaca Improved Team", email = "team@alpacaimproved.com"},
]
keywords = [
    "trading",
    "options",
    "alpaca",
    "backtesting",
    "algorithmic-trading",
    "quantitative-finance",
    "market-data",
    "strategy-development"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "alpaca-py>=0.20.0",
    "alpaca-backtrader-api>=0.15.0",
    "backtrader>=1.9.78.123",
    "vectorbt>=0.25.2",
    "liualgotrader>=3.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "scipy>=1.9.0",
    "scikit-learn>=1.1.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "plotly>=5.10.0",
    "dash>=2.6.0",
    "streamlit>=1.12.0",
    "fastapi>=0.85.0",
    "uvicorn>=0.18.0",
    "pydantic>=1.10.0",
    "aiohttp>=3.8.0",
    "websockets>=10.3",
    "redis>=4.3.0",
    "sqlalchemy>=1.4.0",
    "alembic>=1.8.0",
    "psycopg2-binary>=2.9.0",
    "asyncpg>=0.26.0",
    "python-dotenv>=0.20.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=12.5.0",
    "loguru>=0.6.0",
    "schedule>=1.2.0",
    "APScheduler>=3.9.0",
    "discord.py>=2.0.0",
    "python-telegram-bot>=20.0",
    "ccxt>=4.0.0",
    "yfinance>=0.1.87",
    "alpha-vantage>=2.3.1",
    "requests>=2.28.0",
    "httpx>=0.23.0",
    "tenacity>=8.1.0",
    "cachetools>=5.2.0",
    "joblib>=1.2.0",
    "ta>=0.10.2",
    "TA-Lib>=0.4.25",
    "pytz>=2022.2.1",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.8.2",
    "pytest-asyncio>=0.20.0",
    "pytest-xdist>=2.5.0",
    "pytest-benchmark>=4.0.0",
    "pytest-timeout>=2.1.0",
    "pytest-html>=3.1.0",
    "pytest-json-report>=1.5.0",
    "black>=22.8.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=0.991",
    "bandit>=1.7.4",
    "safety>=2.2.0",
    "pre-commit>=2.20.0",
    "commitizen>=2.35.0",
    "sphinx>=5.1.0",
    "sphinx-rtd-theme>=1.0.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "nbsphinx>=0.8.9",
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.0",
    "notebook>=6.4.12",
    "ipykernel>=6.15.0",
    "tox>=3.25.0",
    "coverage>=6.4.0",
    "codecov>=2.1.12",
]
research = [
    "jupyter>=1.0.0",
    "jupyterlab>=3.4.0",
    "notebook>=6.4.12",
    "ipykernel>=6.15.0",
    "ipywidgets>=8.0.0",
    "plotly>=5.10.0",
    "dash>=2.6.0",
    "streamlit>=1.12.0",
    "seaborn>=0.11.0",
    "statsmodels>=0.13.0",
    "quantlib-python>=1.29",
    "arch>=5.3.0",
]
monitoring = [
    "prometheus-client>=0.14.0",
    "grafana-api>=1.0.3",
    "elastic-apm>=6.12.0",
    "newrelic>=8.2.0",
    "sentry-sdk>=1.9.0",
]
ml = [
    "tensorflow>=2.10.0",
    "torch>=1.12.0",
    "xgboost>=1.6.0",
    "lightgbm>=3.3.0",
    "catboost>=1.0.0",
    "optuna>=3.0.0",
    "hyperopt>=0.2.7",
    "ray[tune]>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/alpaca_improved"
Documentation = "https://alpaca-improved.readthedocs.io/"
Repository = "https://github.com/yourusername/alpaca_improved.git"
"Bug Tracker" = "https://github.com/yourusername/alpaca_improved/issues"
Changelog = "https://github.com/yourusername/alpaca_improved/blob/main/CHANGELOG.md"

[project.scripts]
alpaca-improved = "alpaca_improved.cli:main"
ai-backtest = "alpaca_improved.cli:backtest"
ai-strategy = "alpaca_improved.cli:strategy"
ai-data = "alpaca_improved.cli:data"

[tool.hatch.version]
path = "src/alpaca_improved/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/examples",
    "/docs",
    "/config",
]

[tool.hatch.build.targets.wheel]
packages = ["src/alpaca_improved"]

# ============================================================================
# Development Tools Configuration
# ============================================================================

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["alpaca_improved"]
known_third_party = [
    "alpaca",
    "backtrader",
    "vectorbt",
    "pandas",
    "numpy",
    "scipy",
    "matplotlib",
    "seaborn",
    "plotly",
    "fastapi",
    "pydantic",
    "sqlalchemy",
    "pytest",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "backtrader.*",
    "vectorbt.*",
    "liualgotrader.*",
    "alpaca.*",
    "ta.*",
    "talib.*",
    "yfinance.*",
    "alpha_vantage.*",
    "ccxt.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/alpaca_improved",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
    "paper: marks tests that use paper trading",
    "live: marks tests that use live trading (use with caution)",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "src/alpaca_improved/__init__.py",
    "pyproject.toml:version"
] 